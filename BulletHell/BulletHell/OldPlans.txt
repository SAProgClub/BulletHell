Removed 3 December 2013
----------------------------------------------------------------------
Need to debug the weird ring.
Go through and binary search the commits for when it might have happened.

Happened after the commit for addition of the MainCharacter class and movement successful.
Happened before commit - "Collision detection is working"

Happened between commmits
-"Forgot to save project before committing" - works
-"Seems to still work" - ring - lol a little irony there :P

Error is in physics shape library and stuff. doesn't compile between these commits, but take particular look at changes introduced in Seems to still work.

Seems to have something to do with bullet emissions as it only appears around bullet emitters
Happens every "second" which is very odd.

Also periodic breaks in bullet output... doesn't appear to be an error in the trajectory class,
since all bullet emitters share the issue regardless of bullet's trajectories. Probably occurs below trajectory in commit
bullets disappear!!! they appear, but then disappear!!!

Most likely in MainForm.cs (if it is in MainForm, error did not occur this commit) or in BulletEmitter.cs
----------------------------------------------------------------------

Removed 4 December 2013
----------------------------------------------------------------------
Bug: Weird rings of bullets not being uncreated properly in rewind mode. Might have something to do with collisions immediately after creation.
Yup that's exactly it. Presumably creation occurs, collision occurs *at the same time* they end up in reverse order in the list so when rewinding,
attempts to uncreate and then collision attempts to undelete. Wait that can't be it, I don't think, or the bullets would appear after being hit when unrewinding right?
Well we can check. Yeah no that doesn't seem to be it, besides Physics ought to happen the frame after bullet creation... so anyway. Definitely related
though cause that's when it happens when I'm testing. No it is actually rewinding create before destroy... that's odd. Yep then it destroys it before creation.

Solution: Idk yet. Probably just have the thing check to see whether it's supposed to be visible before adds
Actually solution was to give entities minimum lifetimes.
----------------------------------------------------------------------
